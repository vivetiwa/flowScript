[
{
  "name":"[B"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"}
,
{
  "name":"[Ljava.lang.String;"}
,
{
  "name":"[Lsun.security.pkcs.SignerInfo;"}
,
{
  "name":"com.azure.core.http.HttpRequest"}
,
{
  "name":"com.azure.core.http.ProxyOptions"}
,
{
  "name":"com.azure.core.http.netty.NettyAsyncHttpClientBuilder"}
,
{
  "name":"com.azure.core.http.netty.implementation.NettyToAzureCoreHttpHeadersWrapper"}
,
{
  "name":"com.azure.core.http.netty.implementation.NettyToAzureCoreHttpHeadersWrapper$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.azure.core.http.netty.implementation.ReadTimeoutHandler",
  "queriedMethods":[{"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]}
,
{
  "name":"com.azure.core.http.netty.implementation.ResponseTimeoutHandler"}
,
{
  "name":"com.azure.core.http.netty.implementation.WriteTimeoutHandler",
  "queriedMethods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]}
,
{
  "name":"com.azure.core.http.policy.HttpLogOptions"}
,
{
  "name":"com.azure.core.http.rest.PercentEscaper"}
,
{
  "name":"com.azure.core.http.rest.ResponseConstructorsCache"}
,
{
  "name":"com.azure.core.http.rest.RestProxy"}
,
{
  "name":"com.azure.core.http.rest.StreamResponse",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["com.azure.core.http.HttpRequest","int","com.azure.core.http.HttpHeaders","reactor.core.publisher.Flux"] }]}
,
{
  "name":"com.azure.core.implementation.ByteBufferCollector"}
,
{
  "name":"com.azure.core.implementation.serializer.DefaultJsonSerializer"}
,
{
  "name":"com.azure.core.util.BinaryData"}
,
{
  "name":"com.azure.core.util.ClientOptions"}
,
{
  "name":"com.azure.core.util.Context"}
,
{
  "name":"com.azure.core.util.CoreUtils"}
,
{
  "name":"com.azure.core.util.DateTimeRfc1123",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"com.azure.core.util.serializer.GeoJsonDeserializer"}
,
{
  "name":"com.azure.core.util.serializer.GeoJsonSerializer"}
,
{
  "name":"com.azure.core.util.serializer.JacksonAdapter"}
,
{
  "name":"com.azure.core.util.serializer.SerializerEncoding"}
,
{
  "name":"com.azure.storage.blob.BlobAsyncClient"}
,
{
  "name":"com.azure.storage.blob.BlobClient"}
,
{
  "name":"com.azure.storage.blob.BlobClientBuilder"}
,
{
  "name":"com.azure.storage.blob.BlobUrlParts"}
,
{
  "name":"com.azure.storage.blob.implementation.models.BlobsDownloadHeaders",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setXMsMeta","parameterTypes":["java.util.Map"] }, 
    {"name":"setXMsOr","parameterTypes":["java.util.Map"] }
  ]}
,
{
  "name":"com.azure.storage.blob.implementation.models.BlockBlobsUploadHeaders",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.azure.storage.blob.implementation.models.BlockBlobsUploadResponse",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["com.azure.core.http.HttpRequest","int","com.azure.core.http.HttpHeaders","java.lang.Void","com.azure.storage.blob.implementation.models.BlockBlobsUploadHeaders"] }]}
,
{
  "name":"com.azure.storage.blob.implementation.util.ModelHelper"}
,
{
  "name":"com.azure.storage.blob.models.BlobType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fromString","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"com.azure.storage.blob.models.CopyStatusType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.azure.storage.blob.models.DownloadRetryOptions"}
,
{
  "name":"com.azure.storage.blob.models.LeaseDurationType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"com.azure.storage.blob.models.LeaseStateType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fromString","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"com.azure.storage.blob.models.LeaseStatusType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"fromString","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"com.azure.storage.blob.specialized.BlobAsyncClientBase"}
,
{
  "name":"com.azure.storage.blob.specialized.BlobClientBase"}
,
{
  "name":"com.azure.storage.blob.specialized.BlockBlobAsyncClient"}
,
{
  "name":"com.azure.storage.blob.specialized.SpecializedBlobClientBuilder"}
,
{
  "name":"com.azure.storage.common.StorageSharedKeyCredential"}
,
{
  "name":"com.azure.storage.common.Utility"}
,
{
  "name":"com.azure.storage.common.implementation.StorageImplUtils"}
,
{
  "name":"com.azure.storage.common.policy.MetadataValidationPolicy"}
,
{
  "name":"com.azure.storage.common.policy.RequestRetryOptions"}
,
{
  "name":"com.azure.storage.common.policy.ResponseValidationPolicyBuilder$ResponseValidationPolicy"}
,
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "methods":[{"name":"coercionConfigDefaults","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.databind.cfg.CoercionAction",
  "fields":[{"name":"AsNull"}]}
,
{
  "name":"com.fasterxml.jackson.databind.cfg.CoercionInputShape",
  "fields":[{"name":"EmptyString"}]}
,
{
  "name":"com.fasterxml.jackson.databind.cfg.MutableCoercionConfig",
  "methods":[{"name":"setCoercion","parameterTypes":["com.fasterxml.jackson.databind.cfg.CoercionInputShape","com.fasterxml.jackson.databind.cfg.CoercionAction"] }]}
,
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.HmacCore$HmacSHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true}
,
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt"}]}
,
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "queriedMethods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]}
,
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]}
,
{
  "name":"io.netty.channel.ChannelInitializer",
  "queriedMethods":[
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]}
,
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]}
,
{
  "name":"io.netty.channel.CombinedChannelDuplexHandler",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]}
,
{
  "name":"io.netty.channel.DefaultFileRegion"}
,
{
  "name":"io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"}
,
{
  "name":"io.netty.channel.unix.DatagramSocketAddress"}
,
{
  "name":"io.netty.channel.unix.PeerCredentials"}
,
{
  "name":"io.netty.handler.codec.ByteToMessageDecoder",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]}
,
{
  "name":"io.netty.handler.codec.MessageToMessageDecoder",
  "queriedMethods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]}
,
{
  "name":"io.netty.handler.codec.MessageToMessageEncoder",
  "queriedMethods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]}
,
{
  "name":"io.netty.handler.codec.dns.DatagramDnsQueryEncoder"}
,
{
  "name":"io.netty.handler.codec.http.HttpClientCodec"}
,
{
  "name":"org.slf4j.LoggerFactory"},
{
  "name": "io.netty.util.internal.logging.InternalLoggerFactory"},
{
  "name":"sun.instrument.InstrumentationImpl"},
{
  "name":"io.netty.handler.ssl.SslHandler",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.internal.tcnative.SSLContext"}
,
{
  "name":"io.netty.resolver.dns.DnsNameResolver$1"}
,
{
  "name":"io.netty.resolver.dns.DnsNameResolver$3"}
,
{
  "name":"io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]}
,
{
  "name":"io.netty.util.AbstractReferenceCounted",
  "fields":[{"name":"refCnt"}]}
,
{
  "name":"io.netty.util.ReferenceCountUtil",
  "queryAllDeclaredMethods":true}
,
{
  "name":"io.netty.util.internal.NativeLibraryUtil",
  "methods":[{"name":"loadLibrary","parameterTypes":["java.lang.String","boolean"] }]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit"}]}
,
{
  "name":"java.io.FileDescriptor"}
,
{
  "name":"java.io.IOException"}
,
{
  "name":"java.lang.OutOfMemoryError"}
,
{
  "name":"java.lang.RuntimeException"}
,
{
  "name":"java.lang.String"}
,
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]}
,
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[
    {"name":"getInputArguments","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }
  ]}
,
{
  "name":"java.net.InetSocketAddress"}
,
{
  "name":"java.net.PortUnreachableException"}
,
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]}
,
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]}
,
{
  "name":"java.nio.ByteBuffer",
  "queriedMethods":[{"name":"alignedSlice","parameterTypes":["int"] }]}
,
{
  "name":"java.nio.DirectByteBuffer",
  "queriedMethods":[{"name":"<init>","parameterTypes":["long","int"] }]}
,
{
  "name":"java.nio.channels.ClosedChannelException"}
,
{
  "name":"java.nio.channels.FileChannel"}
,
{
  "name":"java.security.AlgorithmParametersSpi"}
,
{
  "name":"java.security.KeyStoreSpi"}
,
{
  "name":"java.security.MessageDigestSpi"}
,
{
  "name":"java.security.SecureRandomParameters"}
,
{
  "name":"java.security.interfaces.RSAPrivateKey"}
,
{
  "name":"java.security.interfaces.RSAPublicKey"}
,
{
  "name":"java.util.AbstractMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.util.Date"}
,
{
  "name":"java.util.Map",
  "queryAllDeclaredMethods":true}
,
{
  "name":"javax.net.ssl.SSLContext",
  "fields":[{"name":"contextSpi"}]}
,
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]}
,
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]}
,
{
  "name":"long",
  "allDeclaredFields":true}
,
{
  "name":"reactor.netty.channel.ChannelOperationsHandler",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]}
,
{
  "name":"reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer"}
,
{
  "name":"reactor.netty.tcp.SslProvider$SslReadHandler",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]}
,
{
  "name":"reactor.netty.transport.TransportConfig$TransportChannelInitializer"}
,
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[{"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }],
  "queriedMethods":[
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }
  ]}
,
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.JavaKeyStore$DualFormatJKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.certpath.PKIXCertPathValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.rsa.RSASignature$SHA256withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.ssl.SSLContextImpl",
  "fields":[{"name":"trustManager"}]}
,
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.util.ObjectIdentifier"}
,
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.CertificateExtensions"}
,
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}

]
